"""Update incident_id foreign key

Revision ID: c6e4076dd8c0
Revises: 
Create Date: 2025-06-08 23:32:57.349811

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c6e4076dd8c0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('action_items', 'description',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('communication_logs', 'message',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('communication_logs', 'incident_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('contributing_factors', 'description',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('impacts', 'customer_impact',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('impacts', 'business_impact',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('impacts', 'incident_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('incident_profile', 'incident_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('incident_profile', 'summary',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('lessons_learned', 'description',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('long_term_preventative_measures', 'measure_description',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('postmortem_approvals', 'role',
               existing_type=postgresql.ENUM('INCIDENT_LEAD', 'ENGINEERING_MANAGER', 'PRODUCT_OWNER', 'SRE_LEAD', 'QA_LEAD', 'DEPARTMENT_HEAD', name='postmortemapproverroleenum'),
               type_=sa.Enum('INCIDENT_LEAD', 'ENGINEERING_MANAGER', 'PRODUCT_OWNER', 'SRE_LEAD', 'QA_LEAD', 'DEPARTMENT_HEAD', name='rolesenum'),
               existing_nullable=False)
    op.alter_column('postmortem_profile', 'deep_rca',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('remediation_steps', 'step_description',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('resolution_mitigations', 'incident_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('shallow_rca', 'what_happened',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('shallow_rca', 'why_it_happened',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('shallow_rca', 'technical_causes',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('sign_offs', 'incident_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('timeline_events', 'event_description',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('timeline_events', 'incident_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('users', 'full_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'full_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('timeline_events', 'incident_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('timeline_events', 'event_description',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sign_offs', 'incident_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('shallow_rca', 'technical_causes',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('shallow_rca', 'why_it_happened',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('shallow_rca', 'what_happened',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('resolution_mitigations', 'incident_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('remediation_steps', 'step_description',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('postmortem_profile', 'deep_rca',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('postmortem_approvals', 'role',
               existing_type=sa.Enum('INCIDENT_LEAD', 'ENGINEERING_MANAGER', 'PRODUCT_OWNER', 'SRE_LEAD', 'QA_LEAD', 'DEPARTMENT_HEAD', name='rolesenum'),
               type_=postgresql.ENUM('INCIDENT_LEAD', 'ENGINEERING_MANAGER', 'PRODUCT_OWNER', 'SRE_LEAD', 'QA_LEAD', 'DEPARTMENT_HEAD', name='postmortemapproverroleenum'),
               existing_nullable=False)
    op.alter_column('long_term_preventative_measures', 'measure_description',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('lessons_learned', 'description',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('incident_profile', 'summary',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('incident_profile', 'incident_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('impacts', 'incident_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('impacts', 'business_impact',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('impacts', 'customer_impact',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('contributing_factors', 'description',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('communication_logs', 'incident_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('communication_logs', 'message',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('action_items', 'description',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=True)
    # ### end Alembic commands ###
